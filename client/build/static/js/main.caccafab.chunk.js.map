{"version":3,"sources":["components/Nav/index.js","utils/actions.js","utils/GlobalState.js","components/Login/index.js","components/EventTab/index.js","components/CopyLink/index.js","components/Search/index.js","components/UpdateModal/index.js","components/CancelModal/index.js","utils/eventAPI.js","components/EventCard/index.js","components/UpcomingEvent/index.js","components/EventModal/index.js","components/CreateEvent/index.js","components/AllEvents/index.js","components/Events/index.js","utils/locationAPI.js","components/LocationView/index.js","pages/Home.js","components/EventPage/index.js","components/SignUp/index.js","App.js","index.js"],"names":["NavTop","props","Navbar","color","light","expand","Nav","className","navbar","NavItem","NavLink","name","onClick","handleClick","href","SET_RELOAD","UPDATE_EVENT_ACTIVE","UPDATE_HOME_ACTIVE","SET_NEW_EVENT","SET_UPCOMING_EVENT","SET_ALL_EVENTS","UPDATE_EVENT","StoreContext","createContext","Provider","reducer","state","action","type","username","userid","reload","locations","eventActive","homeActive","newEvent","upcomingEvent","event","allEvents","column","update","completedEvent","filter","id","newLocation","console","log","likes","map","location","dislikes","StoreProvider","value","useReducer","authenticated","autocomplete","upcomingCall","upcomingText","locationName","locationAddress","locationCity","locationState","locationZip","angelShot","formatTime","time","hour","split","charAt","substring","minutes","handleInputChange","target","dispatch","innerText","handleDateChange","date","eventDate","moment","utc","local","format","handleTimeChange","handleCallTime","useStoreContext","useContext","Login","useState","user","setUser","redirect","setRedirect","useEffect","handleOnChange","Redirect","to","renderRedirect","Container","Col","sm","md","size","offset","Form","onSubmit","preventDefault","axios","post","then","res","data","catch","err","FormGroup","Label","Input","onChange","for","Button","EventTab","CopyLink","copySuccess","setCopySuccess","textAreaRef","useRef","document","queryCommandSupported","e","current","select","execCommand","focus","ref","shortid","Search","handlePlaceSelect","addressObject","getPlace","address","formatted_address","url","process","onLoad","google","maps","places","Autocomplete","getElementById","setFields","addListener","width","height","frameBorder","src","event_location","allowFullScreen","UpdateModal","dropdownOpen","setDropdown","Modal","isOpen","show","ModalHeader","closeButton","ModalBody","event_name","required","Date","event_date","minDate","event_time","disableClock","event_note","call_time","ButtonDropdown","toggle","DropdownToggle","caret","call_type","DropdownMenu","DropdownItem","divider","ModalFooter","variant","handleClose","handleUpdate","CancelModal","handleCancel","getEvents","get","getEvent","eventid","getEventByShortId","saveEvent","eventData","saveImage","formData","headers","saveCall","callData","updateCall","callid","put","updateEvent","cancelEvent","deleteEvent","delete","EventCard","updateShow","setUpdateShow","cancelShow","setCancelShow","handleShow","a","eventImage","files","API","updatedEvent","FormData","append","updatedImage","event_date_picture","Card","CardBody","active","parse","results","UpcomingEvent","upcomingEvents","el","Call","EventModal","onHide","CreateEvent","setShow","handleFormSubmit","initialEvent","imageData","AllEvents","key","Events","getLocation","locationid","getAllLocations","getFilterLocation","location_city","saveLocation","locationData","updateLike","updateDisLike","ViewCard","likebtn","i","Home","LocationView","EventPage","this","match","params","setState","React","Component","SignUp","trim","userData","email","password","phoneNumber","App","Switch","Route","exact","path","component","Location","ReactDOM","render"],"mappings":"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","file":"static/js/main.caccafab.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst NavTop = function (props) {\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink name=\"events\" onClick={props.handleClick}>Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink name=\"locations\" onClick={props.handleClick}>Location</NavLink>\n                    </NavItem>\n                    <NavItem className=\"signOut\">\n                        <NavLink href=\"\">Log Out</NavLink>\n                    </NavItem>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default NavTop;","export const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const SET_RELOAD = 'SET_RELOAD';\nexport const SET_LOCATION = 'SET_LOCATION';\nexport const UPDATE_EVENT_ACTIVE = 'UPDATE_EVENT_ACTIVE';\nexport const UPDATE_HOME_ACTIVE = 'UDPATE_HOME_ACTIVE';\nexport const SET_NEW_EVENT = 'SET_NEW_EVENT';\nexport const SET_UPCOMING_EVENT = 'SET_UPCOMING_EVENT';\nexport const SET_ALL_EVENTS = 'SET_ALL_EVENTS';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const CANCEL_EVENT = 'CANCEL_EVENT';\nexport const REMOVE_EVENT = 'REMOVE_EVENT';\nexport const COMPLETE_EVENT = 'COMPLETE_EVENT';\nexport const ADD_LOCATION = 'ADD_LOCATION';\nexport const ADD_LIKE = 'ADD_LIKE';\nexport const ADD_DISLIKE = 'ADD_DISLIKE';","import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  LOGIN_USER,\n  LOGOUT_USER,\n  SET_RELOAD,\n  SET_LOCATION,\n  UPDATE_EVENT_ACTIVE,\n  UPDATE_HOME_ACTIVE,\n  SET_NEW_EVENT,\n  SET_UPCOMING_EVENT,\n  SET_ALL_EVENTS,\n  UPDATE_EVENT,\n  REMOVE_EVENT,\n  COMPLETE_EVENT,\n  ADD_LOCATION,\n  ADD_LIKE,\n  ADD_DISLIKE\n} from './actions';\nimport moment from 'moment';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN_USER:\n      return {\n        ...state,\n        username: action.username,\n        userid: action.userid\n      }\n\n    case LOGOUT_USER:\n      return {\n        ...state,\n        username: ''\n      }\n\n    case SET_RELOAD:\n      return {\n        ...state,\n        reload: !state.reload\n      }\n\n    case SET_LOCATION:\n      return {\n        ...state,\n        locations: action.locations\n      }\n\n    case UPDATE_EVENT_ACTIVE:\n      return {\n        ...state,\n        eventActive: action.eventActive\n      }\n\n    case UPDATE_HOME_ACTIVE:\n      return {\n        ...state,\n        homeActive: action.homeActive\n      }\n\n    case SET_NEW_EVENT:\n      return {\n        ...state,\n        newEvent: action.newEvent\n      }\n\n    case SET_UPCOMING_EVENT:\n      return {\n        ...state,\n        upcomingEvent: action.event\n      }\n\n    case SET_ALL_EVENTS:\n      return {\n        ...state,\n        allEvents: action.allEvents\n      }\n\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        newEvent: {\n          ...state.newEvent,\n          [action.column]: action.update\n        }\n      }\n\n    case COMPLETE_EVENT:\n      return {\n        ...state,\n        newEvent: {},\n        allEvents: [\n          ...state.allEvents,\n          action.completedEvent\n        ]\n      }\n\n    case REMOVE_EVENT:\n      return {\n        ...state,\n        allEvents: state.allEvents.filter(event => {\n          return action.id !== event.id\n        })\n      }\n\n    case ADD_LOCATION:\n      return {\n        ...state,\n        locations: [\n          ...state.locations,\n          action.newLocation\n        ]\n      }\n\n    case ADD_LIKE:\n      console.log(\"addinglike\")\n      return {\n        ...state,\n        likes: state.locations.map(location => {\n          if (location.id === action.id) {\n            location.likes += 1\n          }\n          return location\n        })\n      }\n\n    case ADD_DISLIKE:\n      console.log(\"addingdislike\")\n      return {\n        ...state,\n        dislikes: state.locations.map(location => {\n          if (location.id === action.id) {\n            location.dislikes += 1\n          }\n          return location\n        })\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    username: \"\",\n    userid: 0,\n    reload: false,\n    authenticated: false,\n    autocomplete: \"\",\n    newEvent: {},\n    allEvents: [],\n    upcomingCall: {},\n    upcomingText: {},\n    locations: [{\n      id: 0,\n      locationName: \"\",\n      locationAddress: \"\",\n      locationCity: \"\",\n      locationState: \"\",\n      locationZip: \"\",\n      angelShot: \"\",\n      likes: 0,\n      dislikes: 0\n    }],\n    formatTime: time => {\n      let hour = time.split(':')[0];\n      if (hour.charAt(0) === '0') {\n        hour = hour.substring(1);\n      }\n      let minutes = time.split(':')[1];\n      return hour > 12 ? `${(hour - 12)}:${minutes} PM` : `${hour}:${minutes} AM`;\n    },\n    handleInputChange: event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      if (name === 'call_type') {\n        dispatch({\n          type: UPDATE_EVENT,\n          column: name,\n          update: event.target.innerText\n        })\n      } else {\n        dispatch({\n          type: UPDATE_EVENT,\n          column: name,\n          update: value\n        });\n      };\n    },\n    handleDateChange: date => {\n      let eventDate = moment.utc(date).local().format();\n      console.log(\"EVENT DATE\", eventDate);\n      dispatch({\n        type: UPDATE_EVENT,\n        column: \"event_date\",\n        update: eventDate\n      });\n    },\n    handleTimeChange: time => {\n      dispatch({\n        type: UPDATE_EVENT,\n        column: \"event_time\",\n        update: time\n      });\n    },\n    handleCallTime: time => {\n      dispatch({\n        type: UPDATE_EVENT,\n        column: \"call_time\",\n        update: time\n      })\n    }\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, } from 'reactstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport \"./style.css\";\nimport { LOGIN_USER } from '../../utils/actions';\n\nconst Login = function () {\n\n  const [user, setUser] = useState();\n  const [redirect, setRedirect] = useState(false);\n\n  const [_, dispatch] = useStoreContext();\n\n  useEffect(() => {\n    console.log(\"redirectState\");\n  }, [redirect])\n\n  const handleOnChange = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    setUser({\n      ...user,\n      [name]: value\n    })\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    axios.post('/api/login', user)\n      .then(res => {\n        console.log(res);\n        dispatch({\n          type: LOGIN_USER,\n          username: res.data.username,\n          userid: res.data.id\n        })\n        setRedirect(true);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to='/home' />\n    }\n  }\n\n  return (\n    <div>\n      {renderRedirect()}\n      <div className=\"bcg1\">\n        <Container className=\"login\">\n          <row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Form className=\"form\" onSubmit={handleFormSubmit}>\n                <Col>\n                  <h2>Log In</h2>\n                  <FormGroup>\n                    <Label>Username</Label>\n                    <Input\n                      type=\"username\"\n                      name=\"username\"\n                      id=\"user\"\n                      onChange={handleOnChange}\n                    />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"examplePassword\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"examplePassword\"\n                      onChange={handleOnChange}\n                    />\n                  </FormGroup>\n                </Col>\n                <Button className=\"btn1\" color=\"success\">Submit</Button>\n              </Form>\n            </Col>\n          </row>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React from \"react\";\nimport \"./style.css\"\n\nfunction EventTab(props) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <button className=\"nav-link active\" name=\"upcoming\" onClick={props.handleClick}>Upcoming Date</button>\n      </li>\n      <li className=\"nav-item\">\n        <button className=\"nav-link\" name=\"create\" onClick={props.handleClick}>Create-a-Date</button>\n      </li>\n      <li className=\"nav-item\">\n        <button className=\"nav-link\" name=\"all\" onClick={props.handleClick}>View All Dates</button>\n      </li>\n    </ul>\n  );\n}\n\nexport default EventTab;\n","import React, { useRef, useState } from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport './style.css';\n\nexport default function CopyLink(props) {\n\n    const [state, _] = useStoreContext();\n    const [copySuccess, setCopySuccess] = useState('');\n    const textAreaRef = useRef(null);\n\n    function copyToClipboard(e) {\n        textAreaRef.current.select();\n        document.execCommand('copy');\n        e.target.focus();\n        setCopySuccess('Copied!');\n    };\n\n    return (\n        <div>\n            {\n                document.queryCommandSupported('copy') &&\n                <div>\n                    <button onClick={copyToClipboard}>Copy</button>\n                    {copySuccess}\n                </div>\n            }\n            <form>\n                <textarea\n                    className=\"form-control\"\n                    ref={textAreaRef}\n                    value={`localhost:3000/events/${props.shortid}`}\n                />\n            </form>\n        </div>\n    );\n};","import React from 'react';\nimport Script from 'react-load-script';\nimport './style.css';\nimport { UPDATE_EVENT } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction Search() {\n\n  const [state, dispatch] = useStoreContext();\n\n  const handleScriptLoad = () => {\n    /*global google*/ // To disable any eslint 'google not defined' errors\n    state.autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete')\n    );\n    state.autocomplete.setFields(['formatted_address', 'name']);\n    state.autocomplete.addListener('place_changed', handlePlaceSelect);\n  };\n\n  const handlePlaceSelect = () => {\n    const addressObject = state.autocomplete.getPlace();\n    const address = addressObject.formatted_address;\n    if (address) {\n      dispatch({\n        type: UPDATE_EVENT,\n        column: 'event_location',\n        update: `${addressObject.name}, ${address}`\n      });\n    };\n  };\n\n  return (\n    <div className=\"search-container\">\n      <Script\n        url={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`}\n        onLoad={handleScriptLoad}\n      />\n      <input className=\"form-control\" id=\"autocomplete\" name=\"event_location\" onChange={state.handleInputChange} />\n      <iframe\n        className=\"map-container\"\n        width=\"300\"\n        height=\"300\"\n        frameBorder=\"0\"\n        src={state.newEvent ?\n          `https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_API_KEY}&q=${state.newEvent.event_location}`\n          : `https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_API_KEY}&q=Los+Angeles`}\n        allowFullScreen>\n      </iframe>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState } from 'react';\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\nimport Search from '../Search';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction UpdateModal(props) {\n    const [state] = useStoreContext();\n    const [dropdownOpen, setDropdown] = useState();\n\n    const toggle = () => {\n        setDropdown(!dropdownOpen);\n    };\n\n    return (\n        <Modal isOpen={props.show}>\n            <ModalHeader closeButton>\n                <h3>Update-a-Date</h3>\n            </ModalHeader>\n            <ModalBody>\n                <input type=\"text\" name=\"event_name\" value={state.newEvent.event_name} required onChange={state.handleInputChange} />\n                <br />\n                <DatePicker value={new Date(`${state.newEvent.event_date}`)} onChange={state.handleDateChange} minDate={new Date()} />\n                <br />\n                <TimePicker value={state.newEvent.event_time} onChange={state.handleTimeChange} disableClock={true} />\n                <br />\n                <textarea name=\"event_note\" value={state.newEvent.event_note} onChange={state.handleInputChange} />\n                <br />\n                <TimePicker value={state.newEvent.call_time} onChange={state.handleCallTime} disableClock={true} />\n                <br />\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>\n                        {state.newEvent.call_type && state.newEvent.call_type !== '' ? state.newEvent.call_type : \"Call Type\"}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem name=\"call_type\" onClick={state.handleInputChange}>Best Friend Breakup</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem name=\"call_type\" onClick={state.handleInputChange}>Family Emergency</DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <Search handleInputChange={state.handleInputChange} />\n                <br />\n                <input type=\"file\" id=\"event_image\" />\n                <br />\n            </ModalBody>\n            <ModalFooter>\n                <Button variant=\"secondary\" name=\"update\" onClick={props.handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" name=\"update\" onClick={props.handleUpdate}>\n                    Update\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n};\n\nexport default UpdateModal;","import React from 'react';\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\nimport Search from '../Search';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction CancelModal(props) {\n    const [state, dispatch] = useStoreContext();\n\n    return (\n        <Modal isOpen={props.show}>\n            <ModalHeader closeButton>\n                <h3>Cancel Date</h3>\n            </ModalHeader>\n            <ModalBody>\n                <p>Ready to cancel your date? If so, click the \"Cancel Date\" button below and friends will no longer be able to access the link you gave them.</p> \n            </ModalBody>\n            <ModalFooter>\n                <Button variant=\"secondary\" name=\"cancel\" onClick={props.handleClose}>\n                    Go Back\n                </Button>\n                <Button variant=\"primary\" name=\"cancel\" onClick={props.handleCancel}>\n                    Cancel Date\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n};\n\nexport default CancelModal;","import axios from \"axios\";\n\nexport default {\n    // Gets all events from a user\n    getEvents: function (userid) {\n        return axios.get(`/api/users/${userid}/events`);\n    },\n    // Gets the event with the given id\n    getEvent: function (userid, eventid) {\n        return axios.get(`/api/users/${userid}/events/${eventid}`);\n    },\n    // Deletes the post with the given id\n    getEventByShortId: function (shortid) {\n        return axios.get(`/events/${shortid}`);\n    },\n    // Saves an event to the database\n    saveEvent: function (eventData) {\n        return axios.post(\"/api/events\", eventData);\n    },\n    // Saves image to public/images\n    saveImage: function (eventid, formData) {\n        return axios.post(`/api/events/${eventid}/images/upload`, formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n        });\n    },\n    saveCall: function (eventid, callData) {\n        return axios.post(`/api/dates/${eventid}/calls`, callData);\n    },\n    updateCall: function (eventid, callid, callData) {\n        return axios.put(`/api/dates/${eventid}/call/${callid}`, callData)\n    },\n    // Updates existing event with given information\n    updateEvent: function (eventid, eventData) {\n        return axios.put(`/api/events/${eventid}`, eventData);\n    },\n    cancelEvent: function (eventid) {\n        return axios.put(`/api/events/cancel/${eventid}`);\n    },\n    // Deletes event by id\n    deleteEvent: function (eventid) {\n        return axios.delete(`/api/events/${eventid}`)\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport CopyLink from '../CopyLink';\nimport UpdateModal from '../UpdateModal';\nimport CancelModal from '../CancelModal';\nimport { Card, CardBody } from 'reactstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { SET_NEW_EVENT, SET_RELOAD } from '../../utils/actions';\nimport API from '../../utils/eventAPI';\nimport './style.css';\n\nfunction EventCard(props) {\n    const [state, dispatch] = useStoreContext();\n    const [updateShow, setUpdateShow] = useState(false);\n    const [cancelShow, setCancelShow] = useState(false);\n\n    const handleShow = event => {\n        let name = event.target.name;\n        if (name === 'update') {\n            dispatch({\n                type: SET_NEW_EVENT,\n                newEvent: {\n                    event_name: props.event_name,\n                    event_date: props.event_date,\n                    event_time: props.event_time,\n                    event_location: props.event_location,\n                    event_note: props.event_note,\n                    call_time: props.call_time,\n                    call_type: props.call_type\n                }\n            });\n            setUpdateShow(true);\n        } else {\n            setCancelShow(true);\n        }\n    };\n\n    const handleClose = event => {\n        let name = event.target.name;\n        if (name === 'update') {\n            setUpdateShow(false);\n        } else {\n            setCancelShow(false);\n        }\n    };\n\n    const handleUpdate = async event => {\n        try {\n            event.preventDefault();\n            let eventData = state.newEvent\n            let eventImage = document.getElementById('event_image').files[0];\n            let updatedEvent = await API.updateEvent(props.id, eventData);\n            if (state.newEvent.call_time || state.newEvent.call_type) {\n                if (props.call_time) {\n                    API.updateCall(props.id, props.callid, {\n                        call_time: state.newEvent.call_time,\n                        call_type: state.newEvent.call_type\n                    })\n                } else {\n                    API.saveCall(props.id, {\n                        call_time: state.newEvent.call_time,\n                        call_type: state.newEvent.call_type\n                    })\n                };\n            };\n            if (eventImage && updatedEvent.data) {\n                let formData = new FormData();\n                formData.append(\"image\", eventImage);\n                let updatedImage = API.saveImage(props.id, formData);\n                API.updateEvent(props.id, { event_date_picture: updatedImage.data })\n            };\n            dispatch({\n                type: SET_RELOAD\n            });\n            setUpdateShow(false);\n        } catch (err) {\n            console.log(err);\n            console.log('update unsuccessful');\n        };\n    };\n\n    const handleCancel = event => {\n        event.preventDefault();\n        API.cancelEvent(props.id)\n            .then(results => {\n                setCancelShow(false);\n                dispatch({\n                    type: SET_RELOAD\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    return (\n        <>\n            {props.event_name ? (\n                <Card>\n                    <CardBody>\n                        {!props.active ? (<h4 className=\"canceled\">CANCELED</h4>) : (<></>)}\n                        <h4 className=\"font-weight-bold\">{props.event_name}</h4>\n                        <p>\n                            <Moment date={props.event_date} format=\"MMMM Do YYYY\" />\n                        </p>\n                        <p>\n                            {state.formatTime(props.event_time)}\n                        </p>\n                        <p>{props.event_location}</p>\n                        <iframe width=\"300\" height=\"100\" frameBorder=\"0\"\n                        src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_API_KEY}&q=${props.event_location}`} allowFullScreen></iframe>\n                        <p><span className=\"font-weight-bold\">Notes: </span>{props.event_note}</p>\n                        {props.call_time ?\n                            (<div className=\"call-container\">\n                                <p className=\"font-weight-bold\">Scheduled Call</p>\n                                <p>Call time: {state.formatTime(props.call_time)}</p>\n                                <p>Call type: {props.call_type}</p>\n                            </div>) :\n                            <p>You don't have a call scheduled.</p>}\n                        <p><img width=\"100px\" src={props.event_date_picture}></img></p>\n                        {(Date.parse(`${props.event_date}T${props.event_time}`) + 10800000) > new Date() && props.active ? (\n                            <div>\n                                <CopyLink shortid={props.shortid} />\n                                <button className=\"btn btn-primary\" name=\"update\" onClick={handleShow}>Update Date</button>\n                                <button className=\"btn btn-secondary\" name=\"cancel\" onClick={handleShow}>Cancel Date</button>\n                            </div>\n                        ) : (<p></p>)}\n                        <UpdateModal\n                            show={updateShow}\n                            event_name={props.event_name}\n                            event_date={props.event_date}\n                            event_time={props.event_time}\n                            event_location={props.event_location}\n                            event_note={props.event_note}\n                            handleClose={handleClose}\n                            handleUpdate={handleUpdate}\n                        />\n                        <CancelModal\n                            show={cancelShow}\n                            handleClose={handleClose}\n                            handleCancel={handleCancel}\n                        />\n                    </CardBody>\n                </Card>\n            ) : (<p>You don't have any events yet.</p>)\n            }\n        </>\n    )\n}\n\nexport default EventCard","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport EventCard from '../EventCard';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport API from '../../utils/eventAPI';\nimport { SET_UPCOMING_EVENT } from '../../utils/actions';\n\nfunction UpcomingEvent() {\n    const [state, dispatch] = useStoreContext();\n    console.log('state', state);\n\n    useEffect(() => {\n        API.getEvents(state.userid)\n            .then(results => {\n                let upcomingEvents = results.data.filter(el => el.active && (Date.parse(`${el.event_date}T${el.event_time}`) + 10800000) > Date.parse(new Date()));\n                console.log(upcomingEvents[0])\n                dispatch({\n                    type: SET_UPCOMING_EVENT,\n                    event: upcomingEvents[0]\n                });\n            });\n    }, [state.reload]);\n\n    const makeCall = () => {\n        axios.post('/calls/outgoing/14809938664');\n    }\n\n    return (\n        <div>\n            {state.upcomingEvent ? (\n                <>\n                    <EventCard\n                        id={state.upcomingEvent.id}\n                        event_name={state.upcomingEvent.event_name}\n                        event_date={state.upcomingEvent.event_date}\n                        event_time={state.upcomingEvent.event_time}\n                        event_location={state.upcomingEvent.event_location}\n                        event_note={state.upcomingEvent.event_note}\n                        event_date_picture={state.upcomingEvent.event_date_picture}\n                        call_time={state.upcomingEvent.Call ? state.upcomingEvent.call_time : null}\n                        call_type={state.upcomingEvent.Call ? state.upcomingEvent.call_type : null}\n                        callid={state.upcomingEvent.Call ? state.upcomingEvent.id : null}\n                        active={state.upcomingEvent.active}\n                        shortid={state.upcomingEvent.shortid}\n                    />\n                </>\n            ) : (\n                    <p>You don't have any upcoming events.</p>\n                )}\n        </div>\n    )\n}\n\nexport default UpcomingEvent;","import React from 'react';\nimport CopyLink from '../CopyLink';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { useStoreContext } from '../../utils/GlobalState'\n\nfunction EventModal (props) {\n    const [state, _] = useStoreContext();\n\n    return (\n        <div>\n            {state.newEvent ? (\n                <Modal isOpen={props.show} onHide={props.handleClose}>\n                <ModalHeader closeButton>\n                    <h3>Date Saved</h3>\n                </ModalHeader>\n                <ModalBody>\n                    <p>Your date has been successfully saved!</p>\n                    <p>Here is your unique date page link that you can share with friends.</p>\n                    <CopyLink shortid={state.newEvent.shortid} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button variant=\"primary\" onClick={props.handleClose}>\n                        Got it!\n              </Button>\n                </ModalFooter>\n            </Modal>\n            ) : (<></>)}\n        </div>\n    )\n};\n\nexport default EventModal;","import React, { useEffect, useState } from 'react';\nimport TimePicker from 'react-time-picker';\nimport DatePicker from 'react-date-picker';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport FormData from 'form-data';\nimport Search from '../Search';\nimport EventModal from '../EventModal';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport API from '../../utils/eventAPI';\nimport { SET_NEW_EVENT, UPDATE_EVENT, UPDATE_EVENT_ACTIVE } from '../../utils/actions';\nimport './style.css';\n\nfunction CreateEvent() {\n    const [state, dispatch] = useStoreContext();\n    const [show, setShow] = useState(false);\n    const [dropdownOpen, setDropdown] = useState(false);\n\n    useEffect(() => {\n        console.log('state', state);\n    }, [state.active, show]);\n\n    const handleClose = () => {\n        setShow(false);\n        dispatch({\n            type: UPDATE_EVENT_ACTIVE,\n            eventActive: 'upcoming'\n        })\n    }\n\n    const toggle = () => {\n        setDropdown(!dropdownOpen);\n    };\n\n    const handleFormSubmit = async event => {\n        console.log(\"EVENT DATE ON SUBMIT\", state.newEvent.event_date);\n        event.preventDefault();\n        let initialEvent = await API.saveEvent({\n            event_name: state.newEvent.event_name,\n            event_date: state.newEvent.event_date.split('T')[0],\n            event_time: state.newEvent.event_time,\n            event_location: state.newEvent.event_location,\n            event_note: state.newEvent.event_note,\n        });\n        dispatch({\n            type: SET_NEW_EVENT,\n            newEvent: initialEvent.data\n        });\n        let eventImage = document.getElementById('event_image').files[0];\n        let eventid = initialEvent.data.id\n        // proceed to save call if user selected to receive a call\n        if (state.newEvent.call_time) {\n            API.saveCall(eventid, {\n                call_time: state.newEvent.call_time,\n                call_type: state.newEvent.call_type\n            })\n        };\n        // proceed to save image and update event with image link if image is detected AND initial event data was saved\n        if (eventImage && initialEvent.data) {\n            let formData = new FormData();\n            formData.append(\"image\", eventImage);\n            let imageData = await API.saveImage(eventid, formData);\n            dispatch({\n                type: UPDATE_EVENT,\n                column: \"event_date_picture\",\n                update: imageData.data\n            });\n        };\n\n        //proceed to show modal if event save was successful\n        if (initialEvent.data) {\n            setShow(true);\n        } else {\n            console.log('error in saving event');\n        };\n    };\n\n    return (\n        <div className=\"card-body\">\n            <label className=\"font-weight-bold\">Name Your Date</label>\n            <p><input className=\"form-control\" type=\"text\" name=\"event_name\" required onChange={state.handleInputChange} /></p>\n            <label className=\"font-weight-bold\"> Set Date Time</label>\n            <p>\n                <DatePicker className=\"mr-8\" value={state.newEvent && state.newEvent.event_date ? new Date(state.newEvent.event_date) : null} onChange={state.handleDateChange} minDate={new Date()} />\n                <TimePicker onChange={state.handleTimeChange} disableClock={true} />\n            </p>\n            <label className=\"font-weight-bold\">Set Date Location</label>\n            <p><Search /></p>\n            <label className=\"font-weight-bold\">Add Notes (optional)</label>\n            <p><textarea className=\"form-control\" name=\"event_note\" onChange={state.handleInputChange} /></p>\n            <div className=\"call-container\">\n                <label className=\"font-weight-bold\">Schedule a Call (optional)</label>\n                <p><TimePicker onChange={state.handleCallTime} disableClock={true} /></p>\n                <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret>\n                        {state.newEvent && state.newEvent.call_type ? state.newEvent.call_type : \"Call Type\"}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem name=\"call_type\" onClick={state.handleInputChange}>Best Friend Breakup</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem name=\"call_type\" onClick={state.handleInputChange}>Family Emergency</DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n            </div>\n            <label className=\"font-weight-bold\">Image Upload (optional)</label>\n            <input type=\"file\" id=\"event_image\" />\n            <p><button className=\"btn btn-primary mx-auto\" onClick={handleFormSubmit} id=\"submit-button\">Submit</button></p>\n            <EventModal show={show} handleClose={handleClose} />\n\n        </div>\n    );\n}\n\nexport default CreateEvent;\n","import React, { useEffect } from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport API from '../../utils/eventAPI';\nimport EventCard from '../EventCard';\nimport { SET_ALL_EVENTS } from '../../utils/actions';\n\nfunction AllEvents() {\n    const [state, dispatch] = useStoreContext();\n\n    useEffect(() => {\n        API.getEvents(state.userid)\n            .then(results => {\n                console.log(results.data);\n                dispatch({\n                    type: SET_ALL_EVENTS,\n                    allEvents: results.data\n                })\n            })\n    }, [state.reload]);\n\n    return (\n        <div>\n            {state.allEvents[0] ? (\n                <div>\n                    {state.allEvents.map(event => {\n                        return <EventCard\n                            key={event.shortid}\n                            id={event.id}\n                            event_name={event.event_name}\n                            event_date={event.event_date}\n                            event_time={event.event_time}\n                            event_location={event.event_location}\n                            event_note={event.event_note}\n                            event_date_picture={event.event_date_picture}\n                            call_time={event.Call ? event.Call.call_time : null}\n                            call_type={event.Call ? event.Call.call_type : null}\n                            callid={event.Call ? event.Call.id : null}\n                            active={event.active}\n                            shortid={event.shortid}\n                        />\n                    })}\n                </div>\n            ) : (<p>You don't have any events to show.</p>)}\n        </div>\n    )\n};\n\nexport default AllEvents","import React, { useEffect } from 'react';\nimport EventTab from '../EventTab';\nimport UpcomingEvent from '../UpcomingEvent';\nimport CreateEvent from '../CreateEvent';\nimport AllEvents from '../AllEvents';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_EVENT_ACTIVE } from '../../utils/actions';\n\nfunction Events() {\n    const [state, dispatch] = useStoreContext();\n\n    const handleClick = (event) => {\n        let name = event.target.name;\n        dispatch({\n            type: UPDATE_EVENT_ACTIVE,\n            eventActive: name\n        });\n    }\n\n    return (\n        <div className=\"events-container\">\n            <EventTab handleClick={handleClick} />\n            <div className=\"events-container\">\n                {state.eventActive === 'upcoming' ? (\n                    <UpcomingEvent />\n                ) : state.eventActive === 'create' ? (\n                    <CreateEvent handleClick={handleClick}/>\n                ) : state.eventActive === 'all' ? (\n                    <AllEvents />\n                ) : (<UpcomingEvent />)}\n            </div>\n        </div>\n    )\n};\n\nexport default Events;","import axios from \"axios\";\n\nexport default {\n    // Gets all locations\n    getLocation: function (locationid) {\n        return axios.get(`/api/locations/${locationid}`);\n    },\n\n    getAllLocations: function () {\n        return axios.get(`/api/locations/all`).then(data=>{return data})\n    },\n    // Gets the location with the given id that will filter city name\n    getFilterLocation: function (locationid, location_city) {\n        return axios.get(`/api/locations/id/${locationid}?${location_city}=`);\n    },\n    // Saves the location to the database\n    saveLocation: function (locationData) {\n        return axios.post(\"/api/locations\", locationData);\n    },\n    // Updates like with given information\n    updateLike: function (data) {\n        console.log(data)\n        return axios.put(`/api/locations/addlike/${data.id}`, {likes: data.likes? data.likes: 0});\n    },\n    // Updates dislike with given information\n    updateDisLike: function (data) {\n        console.log(data)\n        return axios.put(`/api/locations/adddislike/${data.id}`, {dislikes: data.dislikes? data.dislikes: 0});\n    }\n};","import React,{ useEffect, useState } from 'react';\nimport {useStoreContext} from '../../utils/GlobalState'\nimport API from '../../utils/locationAPI';\n// import LocationForm from \"./../LocationForm\"\n// import LocationCard from \"./../LocationCard\"\n\nfunction ViewCard() {\n    const [ state, dispatch] = useStoreContext()\n    const [likebtn, setLikebtn] = useState(false)\n\n    function btnClick(){\n        setLikebtn(!likebtn)\n    }\n\n    useEffect(() => {\n        API.getAllLocations().then(data => {\n            dispatch({\n                type: \"SET_LOCATION\",\n                locations: data.data\n            })\n            console.log(data.data)\n        })\n    },[likebtn])\n    return (\n        <div>\n           {state.locations? state.locations.map((location, i)=>{\n            //    return <LocationCard click={btnClick} data={location} i={i}></LocationCard>\n           }): \"\"}\n            \n            {/* <LocationForm /> */}\n        </div>\n\n        \n    )\n}\nexport default ViewCard;","import React, { useEffect, useState } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Events from \"../components/Events\";\nimport API from \"../utils/eventAPI\";\nimport LocationView from \"../components/LocationView\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { SET_NEW_EVENT, UPDATE_HOME_ACTIVE } from \"../utils/actions\";\n\nfunction Home() {\n    const [state, dispatch] = useStoreContext();\n\n    useEffect(() => {\n        API.getEvents(state.userid)\n            .then(results => {\n                dispatch({\n                    type: SET_NEW_EVENT,\n                    newEvent: results.data[0]\n                })\n            });\n    }, [state.reload]);\n\n    const handleClick = event => {\n        let name = event.target.name;\n        dispatch({\n            type: UPDATE_HOME_ACTIVE,\n            homeActive: name\n        })\n    }\n\n    return (\n        <>\n            <Nav handleClick={handleClick}/>\n            {state.homeActive === 'events' ? <Events />\n            : state.homeActive === 'locations' ? <LocationView />\n            : <Events />}\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport Moment from 'react-moment';\nimport API from '../../utils/eventAPI';\nimport './style.css';\n\nclass EventPage extends React.Component {\n    state = {\n        event_name: \"\",\n        event_date: \"\",\n        event_time: \"\",\n        event_location: \"\",\n        event_note: \"\",\n        event_date_picture: \"\"\n    }\n\n\n    async componentDidMount() {\n        const { shortid } = this.props.match.params;\n        let eventData = await API.getEventByShortId(shortid);\n        console.log(eventData.data);\n        this.setState({\n            event_name: eventData.data.event_name,\n            event_date: eventData.data.event_date,\n            event_time: eventData.data.event_time,\n            event_location: eventData.data.event_location,\n            event_note: eventData.data.event_note,\n            event_date_picture: eventData.data.event_date_picture\n        })\n    }\n\n    formatTime = time => {\n        let hour = time.split(':')[0];\n        if (hour.charAt(0) === '0') {\n            hour = hour.substring(1);\n        }\n        let minutes = time.split(':')[1];\n        return hour > 12 ? `${(hour - 12)}:${minutes} PM` : `${hour}:${minutes} AM`;\n    };\n\n    render() {\n        if (this.state.event_name) {\n            return (\n                <div>\n                    <h4 className=\"font-weight-bold title p-3\">Your Friend's DateRescue Page</h4>\n                    <div className=\"p-3\">\n                        <p><span className=\"font-weight-bold\">Date:</span> <Moment date={this.state.event_date} format=\"MMMM Do YYYY\" /></p>\n                        <p><span className=\"font-weight-bold\">Time:</span> {this.formatTime(this.state.event_time)}</p>\n                        <p><span className=\"font-weight-bold\">Location:</span> {this.state.event_location}</p>\n                        <iframe width=\"300\" height=\"200\" frameBorder=\"0\"\n                            src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_API_KEY}&q=${this.state.event_location}`} allowFullScreen></iframe>\n                        <p><span className=\"font-weight-bold\">Note:</span> {this.state.event_note}</p>\n                        <p><img width=\"100\" src={this.state.event_date_picture}></img></p>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h4>Sorry, this event address is either invalid or has expired.</h4>\n                    <p>If you think there's been some sort of mistake, ask your friend to resend their unique event address,\n                    or if this is your event, login to Date Rescue and double-check the address is correct.</p>\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default EventPage;","import React, { useState, useEffect } from 'react';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport \"./style.css\";\nimport axios from 'axios';\n\nfunction SignUp() {\n\n  const [user, setUser] = useState({})\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    console.log('signup')\n  }, [redirect]);\n\n  const handleInputChange = event => {\n    let name = event.target.name.trim();\n    let value = event.target.value.trim();\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    let userData = user;\n    if (!user.email || !user.username || !user.password || !user.phoneNumber) {\n      return;\n    }\n    axios.post('/api/signup', userData)\n      .then(() => {\n        console.log('signup successful!');\n        setRedirect(true);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to='/login' />\n    }\n  }\n\n  return (\n    <div>\n      {renderRedirect()}\n      <body className=\"bcg\">\n        <Container className=\"signUp\">\n          <row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Form className=\"form\" onSubmit={handleFormSubmit}>\n                <Col>\n                  <h2>Sign Up</h2>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label>E-mail</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Username</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"examplePassword\"\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Phone Number</Label>\n                    <Input\n                      type=\"tel\"\n                      name=\"phoneNumber\"\n                      id=\"phoneNumber\"\n                      onChange={handleInputChange}\n                    />\n                  </FormGroup>\n                </Col>\n                <h6>Already a member <a href=\"/\"><i className=\"click\" color=\"light\">Click Here</i></a></h6>\n                <Button type=\"submit\" className=\"btn\" color=\"success\">Join Today</Button>\n              </Form></Col>\n          </row>\n        </Container>\n      </body>\n    </div>\n  );\n};\n\nexport default SignUp;","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Home from \"./pages/Home\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport EventPage from \"./components/EventPage\";\nimport SignUp from \"./components/SignUp\";\nimport UpcomingEvent from \"./components/UpcomingEvent\";\nimport AllEvents from \"./components/AllEvents\"\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Location from \"./components/LocationView\"\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <StoreProvider>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/events/:shortid\" component={EventPage} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/event/upcoming\" component={UpcomingEvent} />\n            <Route exact path=\"/events\" component={AllEvents} />\n            <Route exact path=\"/location\" component={Location} />\n            <Route component={Login} />\n          </Switch>\n        </StoreProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}